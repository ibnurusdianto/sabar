import socket
import dns.resolver
import whois as whois_lib
from datetime import datetime
import sys

def exploit_domain_spoofing(domain):
    print(f"\nMencoba eksploitasi spoofing DNS pada domain: {domain}")

    try:
        answers = dns.resolver.resolve(domain, "A")
        ip_addresses = [str(rdata) for rdata in answers]
        if len(ip_addresses) < 2:
            print("\033[93mTidak ada alamat IP alternatif untuk eksploitasi.\033[0m")
            return

        alternative_ip = ip_addresses[1]  
        print(f"\033[92mAlamat IP alternatif yang ditemukan: {alternative_ip}\033[0m")

        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(5)
            s.connect((alternative_ip, 80))  # Coba koneksi ke port 80 (HTTP)
            print(f"\033[92mBerhasil terhubung ke server web pada alamat IP alternatif: {alternative_ip}\033[0m")

           
            request = "GET / HTTP/1.1\r\nHost: {}\r\n\r\n".format(domain)
            s.sendall(request.encode())

            
            response = s.recv(1024)
            print("\033[92mRespons dari server:\033[0m")
            print(response.decode())

    except (socket.timeout, ConnectionRefusedError):
        print("\033[91mKesalahan: Tidak dapat terhubung ke server web pada alamat IP alternatif.\033[0m")

def main():
    if len(sys.argv) != 2:
        print("Penggunaan: python3 domain_spoof_exploit.py <domain>")
        return

    domain = sys.argv[1]
    exploit_domain_spoofing(domain)

if __name__ == "__main__":
    main()
